
// Build config for all feature modules
project.subprojects { subproject ->

    // Apply plugin for all modules
    apply plugin: 'com.android.library'
    apply plugin: 'org.jetbrains.kotlin.android'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'com.google.dagger.hilt.android'

    // Android config for all modules
    android {
        compileSdk 33

        defaultConfig {
            minSdk 25
            targetSdk 33

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            consumerProguardFiles "consumer-rules.pro"
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }

        sourceSets {
            test {
                java.srcDirs += project(":ui").file("src/test/java")
            }
        }

        buildFeatures {
            compose true
        }

        composeOptions {
            kotlinCompilerExtensionVersion '1.1.1'
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        kotlinOptions {
            jvmTarget = '1.8'
        }
    }

    // Dependencies for all feature modules
    dependencies {

        // Modules
        implementation project(":ui")
        implementation project(":domain")

        // DI
        implementation "com.google.dagger:hilt-android:${libs.versions.hilt.get()}"
        kapt "com.google.dagger:hilt-compiler:${libs.versions.hilt.get()}"
        implementation "androidx.hilt:hilt-navigation-compose:${libs.versions.compose.hilt.nav.get()}"

        implementation "androidx.core:core-ktx:${libs.versions.core.ktx.get()}"

        // Compose
        implementation "androidx.compose.ui:ui:${libs.versions.compose.ui.get()}"
        implementation "androidx.compose.ui:ui-tooling-preview:${libs.versions.compose.ui.get()}"
        implementation "androidx.compose.material3:material3:${libs.versions.compose.material3.get()}"

        // Lifecycle
        implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
        implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"

        // Testing
        testImplementation 'junit:junit:4.13.2'
        testImplementation "org.mockito:mockito-core:4.8.1"
        testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
        testImplementation project(":testUtils")
        androidTestImplementation 'androidx.test.ext:junit:1.1.3'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

        // Debug
        debugImplementation "androidx.compose.ui:ui-tooling:${libs.versions.compose.ui.get()}"
    }

    // Allow references to generated code
    kapt {
        correctErrorTypes true
    }

    // Kotlin compiler args
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs += ['-opt-in=kotlin.RequiresOptIn']
        }
    }
}
