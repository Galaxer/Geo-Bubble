plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'info.ccook.geobubble.feature.search'
    compileSdk 33

    defaultConfig {
        minSdk 25
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation project(":domain")
    implementation project(":data:cities")

    implementation "androidx.core:core-ktx:${libs.versions.core.ktx.get()}"
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation "androidx.compose.ui:ui:${libs.versions.compose.ui.get()}"
    implementation "androidx.compose.ui:ui-tooling-preview:${libs.versions.compose.ui.get()}"
    implementation "androidx.compose.material3:material3:${libs.versions.compose.material3.get()}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Debug
    debugImplementation "androidx.compose.ui:ui-tooling:${libs.versions.compose.ui.get()}"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += ['-opt-in=kotlin.RequiresOptIn']
    }
}
